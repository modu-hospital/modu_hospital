<head>
    <!-- 병원상세페이지 슬라이드를 위한 추가 -->
    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"
    ></script>
    <link
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
        rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
        crossorigin="anonymous"
    />
</head>

<style>
    /* .hospital_all {
        box-sizing: border-box;
    }

    .container_hos {
        width: 600px;
        
    }

    .inner_hos {
        width: 100%;
        display: flex;
        
        align-items: flex-start;
        margin: 30px 0;
    } */

    /* #index_01 {
        width: 1000px;
        height: 400px;
        border: 1px solid dimgrey;
        margin: 0 auto;
    }

    #slide1 {
        height: 100%;
        overflow: hidden;
        border-bottom: 1px solid dimgrey;
    }

    #slide1>ul {
        width: 3600px;
        font-size: 0;
    }

    #slide1>ul>li {
        display: block;
        font-size: 0;
        width: 100%;
        height: auto;

    } */

    #content-image {
        padding: 30px;
        text-align: center;
    }

    #bigimages {
        margin-bottom: 10px;
    }

    #bigimage {
        width: 500px;
        height: 500px;
    }

    .small {
        width: 100px;
        height: 100px;
    }
</style>

<div id="content-image"></div>

<div id="main">
    <div class="inner" style="padding: 0">
        <div class="hospital_all">
            <!--상위 div 3개는 공통 <div id="index_01">
                <div id="slide1">
                    <ul id="hospital-image"></ul>
                </div>
            </div> -->

            <!-- <div class="container_hos">
                <div class="inner_hos" id="hospital-image">
                    이미지
                </div>
            </div>
            <button class="prev_bt" type="button">prev</button>
            <button class="next_bt" type="button">next</button> -->

            <div>
                <table id="hospitalName">
                    <tr>
                        <th>병원이름</th>
                        <th>주소</th>
                        <th>전화번호</th>
                    </tr>
                </table>
            </div>

            <div>
                <table id="departmentList">
                    <tr>
                        <th>진료과</th>
                    </tr>
                </table>
            </div>

            <div>
                <table id="doctorsList">
                    <tr>
                        <th>의사이름</th>
                        <th>의사사진</th>
                        <th>의사소개</th>
                        <th>진료과</th>
                        <th>근무날</th>
                    </tr>
                </table>
            </div>
            <div class="review">
                <table id="reviewList">
                    <tr>
                        <th>#</th>
                        <th>작성자</th>
                        <th>내용</th>
                        <th>평점</th>
                        <th>작성날짜</th>
                    </tr>
                </table>
            </div>
            <div>
                <button onclick="goToReservation()">예약하기</button>
                <button id="chat-button">1대1 채팅 문의하기</button>
            </div>
        </div>
    </div>
</div>

<script>


    $(document).ready(function () {
        getReview();
        getdoctor();
        getdepartment();
        gethospitalimage();
        hospitalName();
    });

    const id = window.location.pathname.split('/')[2];

    //병원 이미지
    function gethospitalimage() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}?time=${Date.now()}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                let temp_html = `
                <div id="bigimages">
                    <img id="bigimage"
                    src="${hospitalData.oneHospital.hospitalImage[0].url}">
                </div>
                <div id="smallimages">
                    ${hospitalData.oneHospital.hospitalImage
                        .map((image) => `<img class='small' src="${image.url}">`)
                        .join('')}
                </div>
                `;

                $('#content-image').append(temp_html);

                var bigPic = document.querySelector('#bigimage');
                var smallPics = document.querySelectorAll('.small');

                for (var i = 0; i < smallPics.length; i++) {
                    smallPics[i].addEventListener('click', changepic);
                }

                function changepic() {
                    var smallPicAttribute = this.getAttribute('src');
                    bigPic.setAttribute('src', smallPicAttribute);
                }

                // for (let i = 0; i < hospitalData.oneHospital.hospitalImage.length; i++) {
                //     let hospitalimage = hospitalData.oneHospital.hospitalImage[i].url;
                //     console.log(hospitalimage)

                //     let temp_html = `<img class="s-img" src="${hospitalimage}">`;

                //     $('#hospital-image').append(temp_html);
                // }
            },
            error: function (error) {
                console.log(error.responseJSON);
            },
        });
    }

    //병원 정보
    function hospitalName() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                let hospitalName = hospitalData.oneHospital.hospitalName;
                let hospitalAddress = hospitalData.oneHospital.hospitalAddress;
                let hospitalphone = hospitalData.oneHospital.hospitalphone;

                let temp_html = `
                        <tr>
                            <td>${hospitalName}</td>
                            <td>${hospitalAddress}</td>
                            <td>${hospitalphone}</td>
                        </tr>
                    `;

                $('#hospitalName').append(temp_html);
            },
            error: function (error) {
                console.log(error.responseJSON);
            },
        });
    }

    //의사들 진료과목
    function getdepartment() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                let hospitalDepartmentList = [];

                for (let i = 0; i < hospitalData.oneHospital.doctors.length; i++) {
                    let department = hospitalData.oneHospital.doctors[i].department.split(',');

                    for (let j = 0; j < department.length; j++) {
                        hospitalDepartmentList.push(department[j]);
                    }
                }

                hospitalDepartmentList = Array.from(new Set(hospitalDepartmentList));

                let temp_html = `
                    <tr>
                        <td>${hospitalDepartmentList}</td>
                    </tr>
                `;

                $('#departmentList').append(temp_html);
            },
            error: function (error) {
                console.log(error.responseJSON);
            },
        });
    }

    //의사 이미지 및 정보
    function getdoctor() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                for (let i = 0; i < hospitalData.oneHospital.doctors.length; i++) {
                    let doctors = hospitalData.oneHospital.doctors[i].doctors;
                    let doctorImage = hospitalData.oneHospital.doctors[i].doctorImage;
                    let doctorContent = hospitalData.oneHospital.doctors[i].doctorContent;
                    let department = hospitalData.oneHospital.doctors[i].department;

                    let workTime = hospitalData.oneHospital.doctors[i].workTime;
                    let workTimeSum = '';

                    let temp_html = `<tbody>
                            <tr>
                            <td>${doctors}</td>
                            <th><img src="${doctorImage}" style="width: 100px" alt="의사사진"></th>
                            <td>${doctorContent}</td>
                            <td>${department}</td>
                            <td id="${doctors}" style="vertical-align: top;"></td>
                            </tr>
                        </tbody>`;

                    $('#doctorsList').append(temp_html);

                    for (let j = 0; j < workTime.length; j++) {
                        let day = workTime[j].day;
                        let start = workTime[j].start;
                        let end = workTime[j].end;

                        switch (day) {
                            case 1:
                                day = '월';
                                break;
                            case 2:
                                day = '화';
                                break;
                            case 3:
                                day = '수';
                                break;
                            case 4:
                                day = '목';
                                break;
                            case 5:
                                day = '금';
                                break;
                            case 6:
                                day = '토';
                                break;
                            default:
                                day = '일';
                                break;
                        }

                        workTimeSum = `${day} ${start}~${end}`;

                        document.getElementById(
                            `${doctors}`
                        ).innerHTML += `<div>${workTimeSum}<div>`;
                    }
                }
            },
            error: function (error) {
                console.log(error.responseJSON);
            },
            // 토큰 재발급 api 함수
            // error: function (error) {
            //     if (error.message === 'accessToken 만료') {
            //         whenExpiredToken();
            //     } else {
            //         console.log(error);
            //     }
            // },
        });
    }

    //리뷰조회
    function getReview() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                for (let i = 0; i < hospitalData.oneHospital.reviews.length; i++) {
                    let contents = hospitalData.oneHospital.reviews[i].contents;
                    let star = hospitalData.oneHospital.reviews[i].star;
                    let createdAt = hospitalData.oneHospital.reviews[i].createdAt;

                    const dateData = new Date(createdAt);
                    const year = dateData.getFullYear();
                    const month = dateData.getMonth() + 1;
                    const date = dateData.getDate();

                    let temp_html = `<tbody>
                            <tr>
                                <th scope="row">${i + 1}</th>
                                <td>${name}</td>
                                <td>${contents}</td>
                                <td>${star}</td>
                                <td>${year}년 ${month}월 ${date}일</td>
                            </tr>
                        </tbody>`;

                    $('#reviewList').append(temp_html);
                }
            },
            error: function (error) {
                console.log(error.responseJSON);
            },
        });
    }

    // $.ajax({
    //     url: ``,
    //     type: 'get',
    //     headers: {
    //         'X-Refresh-Token': refreshToken
    //         // 'Authentication': document.cookie(res.accessToken)
    //     },
    //     success: function(response) {
    //         const newAccessToken = response.access_token;

    //     },
    //     error: function(error) {
    //         $.ajax({
    //             url:`/api/token/${userId}`,
    //             headers: {
    //                 'Authorization': 'Bearer ' + newAccessToken
    //             },
    //             success: function(response) {
    //                 const newAccessToken = response.access_token;
    //             }
    //         });
    //         console.log(error);
    //     }
    // });

    function goToReservation() {
        if (document.cookie !== '') {
            const id = window.location.pathname.split('/')[2];
            location.href = `/users/reservation/${id}`;
        } else if (document.cookie === '') {
            swal({
                title: '😓 죄송합니다.',
                text: '모두의 병원 회원만 이용 가능합니다. 로그인 페이지로 이동할까요??',
                icon: 'warning',
                buttons: true,
                dangerMode: true,
            }).then((willDelete) => {
                if (willDelete) {
                    swal('로그인 페이지로 이동합니다.', '', 'success').then((value) => {
                        window.location.href = '/login';
                    });
                } else {
                    swal('취소되었습니다.');
                }
            });
        }
    }

    const userId = "<%= userId %>";
    console.log(userId)
    const hopitalId = window.location.pathname.split('/')[2];
    console.log(hopitalId)

    // 채팅창 스크립트
    const openChat = async () => {
    // 팝업 창 열기
    const popup = window.open('/chat', '_blank', 'width=420,height=518');

    // 룸 생성 API 호출하여 새로운 룸 ID 받아오기
    const response = await fetch('/create-room', {
    method: 'POST',
    headers: {
    'Content-Type': 'application/json'
    },
    body: JSON.stringify({
    userId: userId, // 환자 ID
    hospitalId: hopitalId // 병원 ID
    })
    });
    const data = await response.json();
    console.log("data 입니다",data)
    const roomId = data.roomId;
    console.log(roomId);
    // 채팅창이 열리면 소켓 연결
    popup.onload = () => {
    // 소켓 연결
    console.log("팝업창 오픈",roomId)
    const socket = io('http://localhost:3000/chat', { query: { roomId } });
        socket.on('connect', () => {
            console.log('팝업창 소켓 연결')
            socket.emit('createRoom'); // 새로운 룸 만들기 
        });
        socket.on('roomCreated', (roomId) => {
            console.log(`새로운 룸이 생성됐어요! (ID: ${roomId})`);
            // 새로운 룸 ID를 이용한 채팅창 오픈 
            popup.location.href = `/chat/${roomId}`;
        })
        socket.on('disconnect', () => {
        console.log("소켓 연결이 끊어졌어요 :(");
    });

    };
    };

    // 버튼 클릭 시 채팅창 열기
    document.getElementById('chat-button').addEventListener('click', openChat);

</script>
